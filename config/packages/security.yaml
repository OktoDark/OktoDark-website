security:
    encoders:
        # Our user class and the algorithm we'll use to encode passwords
        # 'auto' means to let Symfony choose the best possible password hasher (Argon2 or Bcrypt)
        # https://symfony.com/doc/current/security.html#c-encoding-the-user-s-password
        App\Entity\User: 'auto'

    providers:
        # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
        # In this example, users are stored via Doctrine in the database
        # To see the users at src/App/DataFixtures/ORM/LoadFixtures.php
        # To load users from somewhere else: https://symfony.com/doc/current/security/custom_provider.html
        database_users:
            entity: { class: App\Entity\User, property: email }

    # https://symfony.com/doc/current/security.html#initial-security-yml-setup-authentication
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            anonymous: lazy
            provider: database_users
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: security_logout
                target: homepage

    # Used to restrict access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: '^/{%app_locales%}/login$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/(%app_locales%)/admin', roles: ROLE_ADMIN }
        - { path: '^/admin', roles: ROLE_ADMIN }

        # Members
        - { path: '^/(%app_locales%)/member', roles: ROLE_MEMBER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_MEMBER
